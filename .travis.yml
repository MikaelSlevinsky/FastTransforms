# Documentation: http://docs.travis-ci.com/user/languages/c/
language: c

jobs:
  include:
    # Minimum system requirements
    - os: osx
      osx_image: xcode10
      compiler: gcc-4.9
      addons:
        homebrew:
          packages: ['gcc@4.9', 'fftw', 'mpfr']
          update: true
      env: JOBS_EVAL="export CC=gcc-4.9 && export COV=gcov-4.9 && export FT_USE_APPLEBLAS=1"
    - os: osx
      osx_image: xcode10
      compiler: gcc-5
      addons:
        homebrew:
          packages: ['gcc@5', 'fftw', 'mpfr']
          update: true
      env: JOBS_EVAL="export CC=gcc-5 && export COV=gcov-5 && export FT_USE_APPLEBLAS=1"
    - os: osx
      osx_image: xcode10
      compiler: gcc-6
      addons:
        homebrew:
          packages: ['gcc@6', 'fftw', 'mpfr']
          update: true
      env: JOBS_EVAL="export CC=gcc-6 && export COV=gcov-6 && export FT_USE_APPLEBLAS=1"
    # Recommended system requirements
    - os: osx
      osx_image: xcode10
      compiler: gcc-7
      addons:
        homebrew:
          packages: ['gcc@7', 'fftw', 'mpfr']
          update: true
      env: JOBS_EVAL="export CC=gcc-7 && export COV=gcov-7 && export FT_USE_APPLEBLAS=1"
    - os: osx
      osx_image: xcode10
      compiler: gcc-8
      addons:
        homebrew:
          packages: ['gcc@8', 'fftw', 'mpfr']
          update: true
      env: JOBS_EVAL="export CC=gcc-8 && export COV=gcov-8 && export FT_USE_APPLEBLAS=1"
    - os: osx
      osx_image: xcode10
      compiler: gcc-9
      addons:
        homebrew:
          packages: ['gcc@9', 'fftw', 'mpfr']
          update: true
      env: JOBS_EVAL="export CC=gcc-9 && export COV=gcov-9 && export FT_USE_APPLEBLAS=1"
    # Minimum system requirements
    - os: linux
      compiler: gcc-4.9
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: ['gcc-4.9', 'libblas-dev', 'libopenblas-base', 'libfftw3-dev', 'libmpfr-dev']
      env: JOBS_EVAL="export CC=gcc-4.9 && export COV=gcov-4.9 && export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:."
    - os: linux
      compiler: gcc-5
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: ['gcc-5', 'libblas-dev', 'libopenblas-base', 'libfftw3-dev', 'libmpfr-dev']
      env: JOBS_EVAL="export CC=gcc-5 && export COV=gcov-5 && export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:."
    - os: linux
      compiler: gcc-6
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: ['gcc-6', 'libblas-dev', 'libopenblas-base', 'libfftw3-dev', 'libmpfr-dev']
      env: JOBS_EVAL="export CC=gcc-6 && export COV=gcov-6 && export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:."
    # Recommended system requirements
    - os: linux
      compiler: gcc-7
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: ['gcc-7', 'libblas-dev', 'libopenblas-base', 'libfftw3-dev', 'libmpfr-dev']
      env: JOBS_EVAL="export CC=gcc-7 && export COV=gcov-7 && export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:."
    - os: linux
      compiler: gcc-8
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: ['gcc-8', 'libblas-dev', 'libopenblas-base', 'libfftw3-dev', 'libmpfr-dev']
      env: JOBS_EVAL="export CC=gcc-8 && export COV=gcov-8 && export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:."
    - os: linux
      compiler: gcc-9
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: ['gcc-9', 'libblas-dev', 'libopenblas-base', 'libfftw3-dev', 'libmpfr-dev']
      env: JOBS_EVAL="export CC=gcc-9 && export COV=gcov-9 && export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:."
    - stage: "Documentation"
      os: osx
      osx_image: xcode10
      addons:
        homebrew:
          packages: doxygen
          update: true
      script: doxygen Doxyfile
      deploy:
        - provider: pages
          edge: true
          keep_history: false
          local_dir: docs/html
          on:
            branch: master
          token: $FT_DOCS

before_install: eval "${JOBS_EVAL}"

script:
  - make FT_COVERAGE=1
  - make runtests FT_NUM_THREADS=4
  - make runexamples
  - make coverage

after_success:
  - bash <(curl -s https://codecov.io/bash)

notifications:
  email: false
